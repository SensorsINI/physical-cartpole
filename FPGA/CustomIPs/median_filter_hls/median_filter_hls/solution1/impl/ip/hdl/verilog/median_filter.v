// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="median_filter_median_filter,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.177750,HLS_SYN_LAT=77,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=542,HLS_SYN_LUT=1078,HLS_VERSION=2020_1}" *)

module median_filter (
        ap_clk,
        ap_rst_n,
        xadc_stream_TDATA,
        xadc_stream_TVALID,
        xadc_stream_TREADY,
        xadc_stream_TKEEP,
        xadc_stream_TSTRB,
        xadc_stream_TUSER,
        xadc_stream_TLAST,
        xadc_stream_TID,
        xadc_stream_TDEST,
        s_axi_MEDIAN_AWVALID,
        s_axi_MEDIAN_AWREADY,
        s_axi_MEDIAN_AWADDR,
        s_axi_MEDIAN_WVALID,
        s_axi_MEDIAN_WREADY,
        s_axi_MEDIAN_WDATA,
        s_axi_MEDIAN_WSTRB,
        s_axi_MEDIAN_ARVALID,
        s_axi_MEDIAN_ARREADY,
        s_axi_MEDIAN_ARADDR,
        s_axi_MEDIAN_RVALID,
        s_axi_MEDIAN_RREADY,
        s_axi_MEDIAN_RDATA,
        s_axi_MEDIAN_RRESP,
        s_axi_MEDIAN_BVALID,
        s_axi_MEDIAN_BREADY,
        s_axi_MEDIAN_BRESP
);

parameter    ap_ST_fsm_state1 = 28'd1;
parameter    ap_ST_fsm_state2 = 28'd2;
parameter    ap_ST_fsm_state3 = 28'd4;
parameter    ap_ST_fsm_pp0_stage0 = 28'd8;
parameter    ap_ST_fsm_pp0_stage1 = 28'd16;
parameter    ap_ST_fsm_state8 = 28'd32;
parameter    ap_ST_fsm_pp1_stage0 = 28'd64;
parameter    ap_ST_fsm_state12 = 28'd128;
parameter    ap_ST_fsm_state13 = 28'd256;
parameter    ap_ST_fsm_state14 = 28'd512;
parameter    ap_ST_fsm_state15 = 28'd1024;
parameter    ap_ST_fsm_state16 = 28'd2048;
parameter    ap_ST_fsm_state17 = 28'd4096;
parameter    ap_ST_fsm_state18 = 28'd8192;
parameter    ap_ST_fsm_state19 = 28'd16384;
parameter    ap_ST_fsm_state20 = 28'd32768;
parameter    ap_ST_fsm_state21 = 28'd65536;
parameter    ap_ST_fsm_state22 = 28'd131072;
parameter    ap_ST_fsm_state23 = 28'd262144;
parameter    ap_ST_fsm_state24 = 28'd524288;
parameter    ap_ST_fsm_state25 = 28'd1048576;
parameter    ap_ST_fsm_state26 = 28'd2097152;
parameter    ap_ST_fsm_state27 = 28'd4194304;
parameter    ap_ST_fsm_state28 = 28'd8388608;
parameter    ap_ST_fsm_state29 = 28'd16777216;
parameter    ap_ST_fsm_state30 = 28'd33554432;
parameter    ap_ST_fsm_state31 = 28'd67108864;
parameter    ap_ST_fsm_state32 = 28'd134217728;
parameter    C_S_AXI_MEDIAN_DATA_WIDTH = 32;
parameter    C_S_AXI_MEDIAN_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_MEDIAN_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [15:0] xadc_stream_TDATA;
input   xadc_stream_TVALID;
output   xadc_stream_TREADY;
input  [1:0] xadc_stream_TKEEP;
input  [1:0] xadc_stream_TSTRB;
input  [0:0] xadc_stream_TUSER;
input  [0:0] xadc_stream_TLAST;
input  [0:0] xadc_stream_TID;
input  [0:0] xadc_stream_TDEST;
input   s_axi_MEDIAN_AWVALID;
output   s_axi_MEDIAN_AWREADY;
input  [C_S_AXI_MEDIAN_ADDR_WIDTH - 1:0] s_axi_MEDIAN_AWADDR;
input   s_axi_MEDIAN_WVALID;
output   s_axi_MEDIAN_WREADY;
input  [C_S_AXI_MEDIAN_DATA_WIDTH - 1:0] s_axi_MEDIAN_WDATA;
input  [C_S_AXI_MEDIAN_WSTRB_WIDTH - 1:0] s_axi_MEDIAN_WSTRB;
input   s_axi_MEDIAN_ARVALID;
output   s_axi_MEDIAN_ARREADY;
input  [C_S_AXI_MEDIAN_ADDR_WIDTH - 1:0] s_axi_MEDIAN_ARADDR;
output   s_axi_MEDIAN_RVALID;
input   s_axi_MEDIAN_RREADY;
output  [C_S_AXI_MEDIAN_DATA_WIDTH - 1:0] s_axi_MEDIAN_RDATA;
output  [1:0] s_axi_MEDIAN_RRESP;
output   s_axi_MEDIAN_BVALID;
input   s_axi_MEDIAN_BREADY;
output  [1:0] s_axi_MEDIAN_BRESP;

 reg    ap_rst_n_inv;
wire   [31:0] median_i;
wire   [31:0] median_o;
reg    median_o_ap_vld;
wire   [31:0] window_size;
reg   [15:0] window_size_input;
reg   [15:0] currentWindowSize;
reg   [15:0] bufferIndex;
reg   [5:0] buffer_r_address0;
reg    buffer_r_ce0;
reg    buffer_r_we0;
wire   [15:0] buffer_r_q0;
reg   [5:0] window_address0;
reg    window_ce0;
reg    window_we0;
wire   [15:0] window_q0;
reg   [5:0] window_address1;
reg    window_ce1;
reg    window_we1;
reg   [15:0] window_d1;
wire   [15:0] window_q1;
reg   [15:0] median_value;
reg    xadc_stream_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [27:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] tmp_nbreadreq_fu_156_p9;
reg   [6:0] i_reg_294;
reg   [6:0] i_1_reg_325;
reg   [0:0] tmp_reg_823;
reg    ap_block_state1;
reg   [15:0] tmp_data_V_reg_827;
reg  signed [15:0] window_size_input_load_reg_834;
reg  signed [15:0] currentWindowSize_load_reg_840;
wire  signed [16:0] sext_ln53_fu_361_p1;
reg  signed [16:0] sext_ln53_reg_846;
wire  signed [16:0] sext_ln53_1_fu_365_p1;
reg  signed [16:0] sext_ln53_1_reg_851;
wire   [0:0] icmp_ln53_fu_369_p2;
reg   [0:0] icmp_ln53_reg_856;
reg   [15:0] bufferIndex_load_reg_860;
wire   [15:0] select_ln56_fu_393_p3;
wire    ap_CS_fsm_state2;
wire   [15:0] select_ln56_1_fu_400_p3;
reg   [15:0] buffer_load_reg_889;
wire    ap_CS_fsm_state3;
wire   [16:0] sub_i_i_i_fu_407_p2;
reg   [16:0] sub_i_i_i_reg_894;
wire   [0:0] icmp_ln35_fu_412_p2;
reg   [0:0] icmp_ln35_reg_899;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [6:0] add_ln35_fu_418_p2;
reg   [6:0] add_ln35_reg_903;
reg    ap_enable_reg_pp0_iter0;
wire   [5:0] trunc_ln38_fu_429_p1;
reg   [5:0] trunc_ln38_reg_908;
wire   [0:0] icmp_ln38_fu_437_p2;
reg   [0:0] icmp_ln38_reg_913;
reg   [0:0] icmp_ln38_reg_913_pp0_iter1_reg;
reg   [5:0] window_addr_reg_917;
reg   [5:0] window_addr_reg_917_pp0_iter1_reg;
wire   [0:0] icmp_ln40_fu_442_p2;
reg   [0:0] icmp_ln40_reg_923;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state5_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire   [0:0] icmp_ln43_fu_457_p2;
reg   [0:0] icmp_ln43_reg_928;
wire   [0:0] tmp_2_fu_499_p3;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state9_pp1_stage0_iter0;
wire    ap_block_state10_pp1_stage0_iter1;
wire    ap_block_state11_pp1_stage0_iter2;
wire    ap_block_pp1_stage0_11001;
wire   [5:0] trunc_ln13_fu_512_p1;
reg   [5:0] trunc_ln13_reg_955;
wire   [0:0] icmp_ln15_fu_520_p2;
reg   [0:0] icmp_ln15_reg_960;
reg   [0:0] icmp_ln15_reg_960_pp1_iter1_reg;
wire   [6:0] add_ln13_fu_526_p2;
reg    ap_enable_reg_pp1_iter0;
reg   [15:0] window_load_3_reg_974;
reg    ap_enable_reg_pp1_iter1;
wire   [0:0] icmp_ln16_fu_532_p2;
reg   [0:0] icmp_ln16_reg_979;
wire   [5:0] i_insert_1_fu_537_p2;
reg   [5:0] i_insert_1_reg_983;
wire    ap_CS_fsm_state12;
wire   [0:0] trunc_ln68_1_fu_613_p1;
reg   [0:0] trunc_ln68_1_reg_994;
wire   [5:0] select_ln76_fu_669_p3;
reg   [5:0] select_ln76_reg_999;
wire   [5:0] select_ln76_1_fu_737_p3;
reg   [5:0] select_ln76_1_reg_1004;
wire    ap_CS_fsm_state13;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_CS_fsm_state8;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state9;
reg    ap_enable_reg_pp1_iter2;
reg   [6:0] ap_phi_mux_i_phi_fu_298_p4;
wire    ap_block_pp0_stage0;
reg  signed [15:0] bufferIndex_loc_0_reg_305;
wire   [15:0] add_ln55_fu_483_p2;
reg   [15:0] empty_24_reg_315;
wire   [63:0] zext_ln54_fu_379_p1;
wire   [63:0] i_cast_fu_424_p1;
wire   [63:0] zext_ln44_fu_473_p1;
wire   [63:0] trunc_ln13_cast7_fu_507_p1;
wire    ap_block_pp1_stage0;
wire   [63:0] zext_ln17_fu_580_p1;
wire   [63:0] zext_ln26_fu_584_p1;
wire   [63:0] zext_ln66_fu_589_p1;
wire   [63:0] zext_ln76_fu_745_p1;
wire   [63:0] zext_ln76_1_fu_749_p1;
wire   [15:0] empty_fu_339_p1;
wire  signed [15:0] add_ln68_fu_617_p2;
wire   [15:0] trunc_ln67_fu_790_p1;
wire    ap_CS_fsm_state32;
wire   [15:0] median_2_fu_777_p3;
wire    ap_CS_fsm_state14;
reg   [15:0] i_remove_found_fu_138;
wire   [15:0] i_remove_found_1_fu_450_p3;
reg   [15:0] i_insert_fu_142;
wire   [15:0] select_ln18_fu_554_p3;
reg   [15:0] inserted_fu_146;
wire   [15:0] select_ln18_1_fu_562_p3;
wire    ap_block_pp0_stage1;
wire  signed [15:0] sext_ln53_fu_361_p0;
wire  signed [15:0] sext_ln53_1_fu_365_p0;
wire  signed [15:0] icmp_ln53_fu_369_p0;
wire  signed [15:0] icmp_ln53_fu_369_p1;
wire   [0:0] icmp_ln56_fu_389_p2;
wire   [16:0] zext_ln38_fu_433_p1;
wire   [5:0] add_ln44_fu_468_p2;
wire   [15:0] zext_ln13_fu_516_p1;
wire   [0:0] icmp_ln18_fu_545_p2;
wire   [15:0] zext_ln11_fu_551_p1;
wire  signed [16:0] sext_ln67_fu_594_p1;
wire   [16:0] grp_fu_604_p0;
wire  signed [15:0] grp_fu_604_p1;
wire   [6:0] trunc_ln68_fu_609_p1;
wire   [5:0] trunc_ln76_2_fu_643_p4;
wire   [6:0] add_ln68_1_fu_623_p2;
wire   [0:0] tmp_3_fu_635_p3;
wire   [5:0] add_ln76_2_fu_653_p2;
wire   [5:0] trunc_ln76_1_fu_659_p4;
wire  signed [16:0] sext_ln76_fu_677_p1;
wire   [6:0] trunc_ln76_fu_681_p1;
wire   [16:0] add_ln76_fu_685_p2;
wire   [6:0] sub_ln76_fu_705_p2;
wire   [5:0] trunc_ln76_5_fu_711_p4;
wire   [6:0] add_ln76_3_fu_691_p2;
wire   [0:0] tmp_4_fu_697_p3;
wire   [5:0] sub_ln76_1_fu_721_p2;
wire   [5:0] trunc_ln76_6_fu_727_p4;
wire   [16:0] zext_ln76_2_fu_753_p1;
wire   [16:0] zext_ln76_3_fu_757_p1;
wire   [16:0] add_ln76_1_fu_761_p2;
wire   [15:0] median_1_fu_767_p4;
wire   [15:0] grp_fu_604_p2;
wire   [15:0] tmp_1_fu_804_p4;
reg    grp_fu_604_ap_start;
wire    grp_fu_604_ap_done;
reg   [27:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire    regslice_both_xadc_stream_V_data_V_U_apdone_blk;
wire   [15:0] xadc_stream_TDATA_int_regslice;
wire    xadc_stream_TVALID_int_regslice;
reg    xadc_stream_TREADY_int_regslice;
wire    regslice_both_xadc_stream_V_data_V_U_ack_in;
wire    regslice_both_xadc_stream_V_keep_V_U_apdone_blk;
wire   [1:0] xadc_stream_TKEEP_int_regslice;
wire    regslice_both_xadc_stream_V_keep_V_U_vld_out;
wire    regslice_both_xadc_stream_V_keep_V_U_ack_in;
wire    regslice_both_xadc_stream_V_strb_V_U_apdone_blk;
wire   [1:0] xadc_stream_TSTRB_int_regslice;
wire    regslice_both_xadc_stream_V_strb_V_U_vld_out;
wire    regslice_both_xadc_stream_V_strb_V_U_ack_in;
wire    regslice_both_xadc_stream_V_user_V_U_apdone_blk;
wire   [0:0] xadc_stream_TUSER_int_regslice;
wire    regslice_both_xadc_stream_V_user_V_U_vld_out;
wire    regslice_both_xadc_stream_V_user_V_U_ack_in;
wire    regslice_both_xadc_stream_V_last_V_U_apdone_blk;
wire   [0:0] xadc_stream_TLAST_int_regslice;
wire    regslice_both_xadc_stream_V_last_V_U_vld_out;
wire    regslice_both_xadc_stream_V_last_V_U_ack_in;
wire    regslice_both_xadc_stream_V_id_V_U_apdone_blk;
wire   [0:0] xadc_stream_TID_int_regslice;
wire    regslice_both_xadc_stream_V_id_V_U_vld_out;
wire    regslice_both_xadc_stream_V_id_V_U_ack_in;
wire    regslice_both_xadc_stream_V_dest_V_U_apdone_blk;
wire   [0:0] xadc_stream_TDEST_int_regslice;
wire    regslice_both_xadc_stream_V_dest_V_U_vld_out;
wire    regslice_both_xadc_stream_V_dest_V_U_ack_in;

// power-on initialization
initial begin
#0 window_size_input = 16'd1;
#0 currentWindowSize = 16'd0;
#0 bufferIndex = 16'd0;
#0 median_value = 16'd0;
#0 ap_CS_fsm = 28'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
end

median_filter_buffer_r #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
buffer_r_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(buffer_r_address0),
    .ce0(buffer_r_ce0),
    .we0(buffer_r_we0),
    .d0(tmp_data_V_reg_827),
    .q0(buffer_r_q0)
);

median_filter_window #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
window_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(window_address0),
    .ce0(window_ce0),
    .we0(window_we0),
    .d0(window_q0),
    .q0(window_q0),
    .address1(window_address1),
    .ce1(window_ce1),
    .we1(window_we1),
    .d1(window_d1),
    .q1(window_q1)
);

median_filter_MEDIAN_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_MEDIAN_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_MEDIAN_DATA_WIDTH ))
MEDIAN_s_axi_U(
    .AWVALID(s_axi_MEDIAN_AWVALID),
    .AWREADY(s_axi_MEDIAN_AWREADY),
    .AWADDR(s_axi_MEDIAN_AWADDR),
    .WVALID(s_axi_MEDIAN_WVALID),
    .WREADY(s_axi_MEDIAN_WREADY),
    .WDATA(s_axi_MEDIAN_WDATA),
    .WSTRB(s_axi_MEDIAN_WSTRB),
    .ARVALID(s_axi_MEDIAN_ARVALID),
    .ARREADY(s_axi_MEDIAN_ARREADY),
    .ARADDR(s_axi_MEDIAN_ARADDR),
    .RVALID(s_axi_MEDIAN_RVALID),
    .RREADY(s_axi_MEDIAN_RREADY),
    .RDATA(s_axi_MEDIAN_RDATA),
    .RRESP(s_axi_MEDIAN_RRESP),
    .BVALID(s_axi_MEDIAN_BVALID),
    .BREADY(s_axi_MEDIAN_BREADY),
    .BRESP(s_axi_MEDIAN_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .median_o(median_o),
    .median_o_ap_vld(median_o_ap_vld),
    .median_i(median_i),
    .window_size(window_size)
);

median_filter_srem_17ns_16s_16_21_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
srem_17ns_16s_16_21_seq_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_604_ap_start),
    .done(grp_fu_604_ap_done),
    .din0(grp_fu_604_p0),
    .din1(grp_fu_604_p1),
    .ce(1'b1),
    .dout(grp_fu_604_p2)
);

regslice_both #(
    .DataWidth( 16 ))
regslice_both_xadc_stream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(xadc_stream_TDATA),
    .vld_in(xadc_stream_TVALID),
    .ack_in(regslice_both_xadc_stream_V_data_V_U_ack_in),
    .data_out(xadc_stream_TDATA_int_regslice),
    .vld_out(xadc_stream_TVALID_int_regslice),
    .ack_out(xadc_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_xadc_stream_V_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 2 ))
regslice_both_xadc_stream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(xadc_stream_TKEEP),
    .vld_in(xadc_stream_TVALID),
    .ack_in(regslice_both_xadc_stream_V_keep_V_U_ack_in),
    .data_out(xadc_stream_TKEEP_int_regslice),
    .vld_out(regslice_both_xadc_stream_V_keep_V_U_vld_out),
    .ack_out(xadc_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_xadc_stream_V_keep_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 2 ))
regslice_both_xadc_stream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(xadc_stream_TSTRB),
    .vld_in(xadc_stream_TVALID),
    .ack_in(regslice_both_xadc_stream_V_strb_V_U_ack_in),
    .data_out(xadc_stream_TSTRB_int_regslice),
    .vld_out(regslice_both_xadc_stream_V_strb_V_U_vld_out),
    .ack_out(xadc_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_xadc_stream_V_strb_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_xadc_stream_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(xadc_stream_TUSER),
    .vld_in(xadc_stream_TVALID),
    .ack_in(regslice_both_xadc_stream_V_user_V_U_ack_in),
    .data_out(xadc_stream_TUSER_int_regslice),
    .vld_out(regslice_both_xadc_stream_V_user_V_U_vld_out),
    .ack_out(xadc_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_xadc_stream_V_user_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_xadc_stream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(xadc_stream_TLAST),
    .vld_in(xadc_stream_TVALID),
    .ack_in(regslice_both_xadc_stream_V_last_V_U_ack_in),
    .data_out(xadc_stream_TLAST_int_regslice),
    .vld_out(regslice_both_xadc_stream_V_last_V_U_vld_out),
    .ack_out(xadc_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_xadc_stream_V_last_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_xadc_stream_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(xadc_stream_TID),
    .vld_in(xadc_stream_TVALID),
    .ack_in(regslice_both_xadc_stream_V_id_V_U_ack_in),
    .data_out(xadc_stream_TID_int_regslice),
    .vld_out(regslice_both_xadc_stream_V_id_V_U_vld_out),
    .ack_out(xadc_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_xadc_stream_V_id_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_xadc_stream_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(xadc_stream_TDEST),
    .vld_in(xadc_stream_TVALID),
    .ack_in(regslice_both_xadc_stream_V_dest_V_U_ack_in),
    .data_out(xadc_stream_TDEST_int_regslice),
    .vld_out(regslice_both_xadc_stream_V_dest_V_U_vld_out),
    .ack_out(xadc_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_xadc_stream_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state9)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state9);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bufferIndex_loc_0_reg_305 <= select_ln56_fu_393_p3;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln53_reg_856 == 1'd1))) begin
        bufferIndex_loc_0_reg_305 <= bufferIndex_load_reg_860;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        empty_24_reg_315 <= select_ln56_1_fu_400_p3;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln53_reg_856 == 1'd1))) begin
        empty_24_reg_315 <= add_ln55_fu_483_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_1_reg_325 <= 7'd62;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_2_fu_499_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i_1_reg_325 <= add_ln13_fu_526_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln16_reg_979 == 1'd0) & (icmp_ln15_reg_960_pp1_iter1_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i_insert_fu_142 <= select_ln18_fu_554_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        i_insert_fu_142 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_reg_294 <= 7'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln35_reg_899 == 1'd0))) begin
        i_reg_294 <= add_ln35_reg_903;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_fu_457_p2 == 1'd1) & (icmp_ln38_reg_913 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_remove_found_fu_138 <= 16'd1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_fu_457_p2 == 1'd0) & (icmp_ln38_reg_913 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_remove_found_fu_138 <= i_remove_found_1_fu_450_p3;
    end else if ((~((tmp_nbreadreq_fu_156_p9 == 1'd1) & (xadc_stream_TVALID_int_regslice == 1'b0)) & (tmp_nbreadreq_fu_156_p9 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln53_fu_369_p2 == 1'd1))) begin
        i_remove_found_fu_138 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln16_reg_979 == 1'd0) & (icmp_ln15_reg_960_pp1_iter1_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        inserted_fu_146 <= select_ln18_1_fu_562_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        inserted_fu_146 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln35_reg_903 <= add_ln35_fu_418_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state32) & (tmp_reg_823 == 1'd1))) begin
        bufferIndex <= trunc_ln67_fu_790_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((tmp_nbreadreq_fu_156_p9 == 1'd1) & (xadc_stream_TVALID_int_regslice == 1'b0)) & (tmp_nbreadreq_fu_156_p9 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        bufferIndex_load_reg_860 <= bufferIndex;
        currentWindowSize_load_reg_840 <= currentWindowSize;
        icmp_ln53_reg_856 <= icmp_ln53_fu_369_p2;
        sext_ln53_1_reg_851 <= sext_ln53_1_fu_365_p1;
        sext_ln53_reg_846 <= sext_ln53_fu_361_p1;
        tmp_data_V_reg_827 <= xadc_stream_TDATA_int_regslice;
        window_size_input_load_reg_834 <= window_size_input;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        buffer_load_reg_889 <= buffer_r_q0;
        sub_i_i_i_reg_894 <= sub_i_i_i_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        currentWindowSize <= add_ln68_fu_617_p2;
        select_ln76_1_reg_1004 <= select_ln76_1_fu_737_p3;
        select_ln76_reg_999 <= select_ln76_fu_669_p3;
        trunc_ln68_1_reg_994 <= trunc_ln68_1_fu_613_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_reg_960 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i_insert_1_reg_983 <= i_insert_1_fu_537_p2;
        icmp_ln16_reg_979 <= icmp_ln16_fu_532_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_fu_499_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln15_reg_960 <= icmp_ln15_fu_520_p2;
        trunc_ln13_reg_955 <= trunc_ln13_fu_512_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln15_reg_960_pp1_iter1_reg <= icmp_ln15_reg_960;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln35_reg_899 <= icmp_ln35_fu_412_p2;
        icmp_ln38_reg_913_pp0_iter1_reg <= icmp_ln38_reg_913;
        window_addr_reg_917_pp0_iter1_reg <= window_addr_reg_917;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln35_fu_412_p2 == 1'd0))) begin
        icmp_ln38_reg_913 <= icmp_ln38_fu_437_p2;
        trunc_ln38_reg_908 <= trunc_ln38_fu_429_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln38_reg_913 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln35_reg_899 == 1'd0))) begin
        icmp_ln40_reg_923 <= icmp_ln40_fu_442_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln38_reg_913 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln43_reg_928 <= icmp_ln43_fu_457_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        median_value <= median_2_fu_777_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((tmp_nbreadreq_fu_156_p9 == 1'd1) & (xadc_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_reg_823 <= tmp_nbreadreq_fu_156_p9;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln38_fu_437_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln35_fu_412_p2 == 1'd0))) begin
        window_addr_reg_917 <= i_cast_fu_424_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln15_reg_960 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        window_load_3_reg_974 <= window_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((tmp_nbreadreq_fu_156_p9 == 1'd1) & (xadc_stream_TVALID_int_regslice == 1'b0)) & (tmp_nbreadreq_fu_156_p9 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        window_size_input <= empty_fu_339_p1;
    end
end

always @ (*) begin
    if ((icmp_ln35_fu_412_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_2_fu_499_p3 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln35_reg_899 == 1'd0))) begin
        ap_phi_mux_i_phi_fu_298_p4 = add_ln35_reg_903;
    end else begin
        ap_phi_mux_i_phi_fu_298_p4 = i_reg_294;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        buffer_r_address0 = zext_ln66_fu_589_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        buffer_r_address0 = zext_ln54_fu_379_p1;
    end else begin
        buffer_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (~((tmp_nbreadreq_fu_156_p9 == 1'd1) & (xadc_stream_TVALID_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        buffer_r_ce0 = 1'b1;
    end else begin
        buffer_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        buffer_r_we0 = 1'b1;
    end else begin
        buffer_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_604_ap_start = 1'b1;
    end else begin
        grp_fu_604_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        median_o_ap_vld = 1'b1;
    end else begin
        median_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        window_address0 = zext_ln76_1_fu_749_p1;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        window_address0 = trunc_ln13_cast7_fu_507_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        window_address0 = window_addr_reg_917_pp0_iter1_reg;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        window_address0 = zext_ln44_fu_473_p1;
    end else begin
        window_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        window_address1 = zext_ln76_fu_745_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        window_address1 = zext_ln26_fu_584_p1;
    end else if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        window_address1 = zext_ln17_fu_580_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        window_address1 = i_cast_fu_424_p1;
    end else begin
        window_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        window_ce0 = 1'b1;
    end else begin
        window_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        window_ce1 = 1'b1;
    end else begin
        window_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        window_d1 = tmp_data_V_reg_827;
    end else if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        window_d1 = window_load_3_reg_974;
    end else begin
        window_d1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln43_reg_928 == 1'd1) & (icmp_ln38_reg_913_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        window_we0 = 1'b1;
    end else begin
        window_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln16_reg_979 == 1'd1) & (icmp_ln15_reg_960_pp1_iter1_reg == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        window_we1 = 1'b1;
    end else begin
        window_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_156_p9 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        xadc_stream_TDATA_blk_n = xadc_stream_TVALID_int_regslice;
    end else begin
        xadc_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((tmp_nbreadreq_fu_156_p9 == 1'd1) & (xadc_stream_TVALID_int_regslice == 1'b0)) & (tmp_nbreadreq_fu_156_p9 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        xadc_stream_TREADY_int_regslice = 1'b1;
    end else begin
        xadc_stream_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((tmp_nbreadreq_fu_156_p9 == 1'd1) & (xadc_stream_TVALID_int_regslice == 1'b0)) & (tmp_nbreadreq_fu_156_p9 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln53_fu_369_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((tmp_nbreadreq_fu_156_p9 == 1'd1) & (xadc_stream_TVALID_int_regslice == 1'b0)) & (tmp_nbreadreq_fu_156_p9 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln53_fu_369_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((tmp_nbreadreq_fu_156_p9 == 1'd1) & (xadc_stream_TVALID_int_regslice == 1'b0)) & (tmp_nbreadreq_fu_156_p9 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln35_fu_412_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln35_fu_412_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_2_fu_499_p3 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_2_fu_499_p3 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln13_fu_526_p2 = ($signed(i_1_reg_325) + $signed(7'd127));

assign add_ln35_fu_418_p2 = (ap_phi_mux_i_phi_fu_298_p4 + 7'd1);

assign add_ln44_fu_468_p2 = (trunc_ln38_reg_908 + 6'd1);

assign add_ln55_fu_483_p2 = ($signed(window_size_input_load_reg_834) + $signed(16'd65535));

assign add_ln68_1_fu_623_p2 = (7'd1 + trunc_ln68_fu_609_p1);

assign add_ln68_fu_617_p2 = (16'd1 + empty_24_reg_315);

assign add_ln76_1_fu_761_p2 = (zext_ln76_2_fu_753_p1 + zext_ln76_3_fu_757_p1);

assign add_ln76_2_fu_653_p2 = (6'd1 + trunc_ln76_2_fu_643_p4);

assign add_ln76_3_fu_691_p2 = ($signed(7'd127) + $signed(trunc_ln76_fu_681_p1));

assign add_ln76_fu_685_p2 = ($signed(17'd131071) + $signed(sext_ln76_fu_677_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((tmp_nbreadreq_fu_156_p9 == 1'd1) & (xadc_stream_TVALID_int_regslice == 1'b0));
end

assign ap_block_state10_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign empty_fu_339_p1 = window_size[15:0];

assign grp_fu_604_p0 = ($signed(17'd1) + $signed(sext_ln67_fu_594_p1));

assign grp_fu_604_p1 = sext_ln53_1_reg_851;

assign i_cast_fu_424_p1 = ap_phi_mux_i_phi_fu_298_p4;

assign i_insert_1_fu_537_p2 = (trunc_ln13_reg_955 + 6'd1);

assign i_remove_found_1_fu_450_p3 = ((icmp_ln40_reg_923[0:0] === 1'b1) ? 16'd1 : i_remove_found_fu_138);

assign icmp_ln15_fu_520_p2 = (($signed(zext_ln13_fu_516_p1) < $signed(empty_24_reg_315)) ? 1'b1 : 1'b0);

assign icmp_ln16_fu_532_p2 = ((window_q0 > tmp_data_V_reg_827) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_545_p2 = ((inserted_fu_146 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln35_fu_412_p2 = ((ap_phi_mux_i_phi_fu_298_p4 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln38_fu_437_p2 = (($signed(zext_ln38_fu_433_p1) < $signed(sub_i_i_i_reg_894)) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_442_p2 = ((window_q1 == buffer_load_reg_889) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_457_p2 = ((i_remove_found_1_fu_450_p3 == 16'd1) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_369_p0 = currentWindowSize;

assign icmp_ln53_fu_369_p1 = window_size_input;

assign icmp_ln53_fu_369_p2 = ((icmp_ln53_fu_369_p0 == icmp_ln53_fu_369_p1) ? 1'b1 : 1'b0);

assign icmp_ln56_fu_389_p2 = (($signed(currentWindowSize_load_reg_840) > $signed(window_size_input_load_reg_834)) ? 1'b1 : 1'b0);

assign median_1_fu_767_p4 = {{add_ln76_1_fu_761_p2[16:1]}};

assign median_2_fu_777_p3 = ((trunc_ln68_1_reg_994[0:0] === 1'b1) ? median_1_fu_767_p4 : window_q1);

assign median_o = {{tmp_1_fu_804_p4}, {median_value}};

assign select_ln18_1_fu_562_p3 = ((icmp_ln18_fu_545_p2[0:0] === 1'b1) ? 16'd1 : inserted_fu_146);

assign select_ln18_fu_554_p3 = ((icmp_ln18_fu_545_p2[0:0] === 1'b1) ? zext_ln11_fu_551_p1 : i_insert_fu_142);

assign select_ln56_1_fu_400_p3 = ((icmp_ln56_fu_389_p2[0:0] === 1'b1) ? 16'd0 : currentWindowSize_load_reg_840);

assign select_ln56_fu_393_p3 = ((icmp_ln56_fu_389_p2[0:0] === 1'b1) ? 16'd0 : bufferIndex_load_reg_860);

assign select_ln76_1_fu_737_p3 = ((tmp_4_fu_697_p3[0:0] === 1'b1) ? sub_ln76_1_fu_721_p2 : trunc_ln76_6_fu_727_p4);

assign select_ln76_fu_669_p3 = ((tmp_3_fu_635_p3[0:0] === 1'b1) ? add_ln76_2_fu_653_p2 : trunc_ln76_1_fu_659_p4);

assign sext_ln53_1_fu_365_p0 = window_size_input;

assign sext_ln53_1_fu_365_p1 = sext_ln53_1_fu_365_p0;

assign sext_ln53_fu_361_p0 = currentWindowSize;

assign sext_ln53_fu_361_p1 = sext_ln53_fu_361_p0;

assign sext_ln67_fu_594_p1 = bufferIndex_loc_0_reg_305;

assign sext_ln76_fu_677_p1 = add_ln68_fu_617_p2;

assign sub_i_i_i_fu_407_p2 = ($signed(sext_ln53_reg_846) + $signed(17'd131071));

assign sub_ln76_1_fu_721_p2 = (6'd0 - trunc_ln76_5_fu_711_p4);

assign sub_ln76_fu_705_p2 = (7'd0 - trunc_ln68_fu_609_p1);

assign tmp_1_fu_804_p4 = {{median_i[31:16]}};

assign tmp_2_fu_499_p3 = i_1_reg_325[32'd6];

assign tmp_3_fu_635_p3 = add_ln68_fu_617_p2[32'd15];

assign tmp_4_fu_697_p3 = add_ln76_fu_685_p2[32'd16];

assign tmp_nbreadreq_fu_156_p9 = xadc_stream_TVALID_int_regslice;

assign trunc_ln13_cast7_fu_507_p1 = i_1_reg_325;

assign trunc_ln13_fu_512_p1 = i_1_reg_325[5:0];

assign trunc_ln38_fu_429_p1 = ap_phi_mux_i_phi_fu_298_p4[5:0];

assign trunc_ln67_fu_790_p1 = grp_fu_604_p2[15:0];

assign trunc_ln68_1_fu_613_p1 = empty_24_reg_315[0:0];

assign trunc_ln68_fu_609_p1 = empty_24_reg_315[6:0];

assign trunc_ln76_1_fu_659_p4 = {{add_ln68_1_fu_623_p2[6:1]}};

assign trunc_ln76_2_fu_643_p4 = {{empty_24_reg_315[6:1]}};

assign trunc_ln76_5_fu_711_p4 = {{sub_ln76_fu_705_p2[6:1]}};

assign trunc_ln76_6_fu_727_p4 = {{add_ln76_3_fu_691_p2[6:1]}};

assign trunc_ln76_fu_681_p1 = add_ln68_fu_617_p2[6:0];

assign xadc_stream_TREADY = regslice_both_xadc_stream_V_data_V_U_ack_in;

assign zext_ln11_fu_551_p1 = i_insert_1_reg_983;

assign zext_ln13_fu_516_p1 = i_1_reg_325;

assign zext_ln17_fu_580_p1 = i_insert_1_reg_983;

assign zext_ln26_fu_584_p1 = i_insert_fu_142;

assign zext_ln38_fu_433_p1 = trunc_ln38_fu_429_p1;

assign zext_ln44_fu_473_p1 = add_ln44_fu_468_p2;

assign zext_ln54_fu_379_p1 = bufferIndex;

assign zext_ln66_fu_589_p1 = $unsigned(bufferIndex_loc_0_reg_305);

assign zext_ln76_1_fu_749_p1 = select_ln76_1_reg_1004;

assign zext_ln76_2_fu_753_p1 = window_q0;

assign zext_ln76_3_fu_757_p1 = window_q1;

assign zext_ln76_fu_745_p1 = select_ln76_reg_999;

endmodule //median_filter
